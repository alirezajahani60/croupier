########
# Copyright (c) 2017-2018 MSO4SC - javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible downloading this file,
    - http://raw.githubusercontent.com/mso4sc/cloudify-hpc-plugin/master/resources/types/cfy_types.yaml
    - https://raw.githubusercontent.com/MSO4SC/cloudify-im-extension/master/im.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - plugin.yaml
    - inputs_def.yaml

node_templates:
  hpc_wm:
    type: hpc.nodes.WorkloadManager
    properties:
      config: { get_input: hpc_wm_config }
      credentials: { get_input: hpc_wm_credentials }
      external_monitor_entrypoint: { get_input: monitor_entrypoint }
      job_prefix: { get_input: job_prefix }
      base_dir: { get_input: hpc_base_dir }
      monitor_period: 15
      skip_cleanup: true
      workdir_prefix: "single_singularity"
      # simulate: True # Comment to test with real infrastructure

  first_job:
    type: hpc.nodes.Job
    properties:
        job_options:
          type: 'SHELL'
          command: 'mkdir outputs && touch $CURRENT_WORKDIR/outputs/single.test && echo "hello!" >> $CURRENT_WORKDIR/outputs/single.test'
          remote_outputs:
          - file: single.test
            relative_path: outputs/
        skip_cleanup: True
    relationships:
      - type: job_managed_by_wm
        target: hpc_wm

  second_job:
    type: hpc.nodes.Job
    properties:
        job_options:
          remote_inputs:
          - file: single.test
            relative_path: inputs/
          type: 'SHELL'
          command: 'mkdir inputs && touch $CURRENT_WORKDIR/inputs/single.test && echo "bye bye!" >> $CURRENT_WORKDIR/inputs/single.test'
        publish:
        - dataset: { get_input: ckan_outputs_dataset }
          file_path: "$CURRENT_WORKDIR/inputs/single.test"
          name: "io_test"
          description: "io test"
        skip_cleanup: True
    relationships:
      - type: job_managed_by_wm
        target: hpc_wm
      - type: job_depends_on
        target: first_job

outputs:
  single_job_name:
    description: single job name in the VM
    value: { get_attribute: [second_job, job_name] }
